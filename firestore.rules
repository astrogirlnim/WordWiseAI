rules_version='2'

service cloud.firestore {
  match /databases/{database}/documents {
    // Users can only read and write their own data.
    match /users/{userId} {
      allow read, update, delete: if request.auth != null && request.auth.uid == userId;
      allow create: if request.auth != null && request.auth.uid == userId;
    }

    // Example for a 'documents' collection where documents have an 'ownerId'.
    match /documents/{documentId} {
      allow get, read, update, delete: if request.auth != null && resource.data.ownerId == request.auth.uid;
      allow create: if request.auth != null && request.resource.data.ownerId == request.auth.uid;
      allow list: if request.auth != null;

      // Allow the document owner to read/write versions sub-collection
      match /versions/{versionId} {
        allow read, list: if request.auth != null;
        allow create, update, delete: if request.auth != null && get(/databases/$(database)/documents/documents/$(documentId)).data.ownerId == request.auth.uid;
      }

      // Allow the document owner to manage style suggestions
      match /styleSuggestions/{suggestionId} {
        allow read, write, create, delete: if request.auth != null && get(/databases/$(database)/documents/documents/$(documentId)).data.ownerId == request.auth.uid;
      }
    }

    // Allow authenticated users to write to the audit log
    match /auditLogs/{logId} {
      allow create: if request.auth != null;
    }

    // Add other collections here with similar rules.
  }
}
